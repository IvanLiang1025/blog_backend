2022-01-18 00:23:10:658 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h4m36s581ms).
2022-01-18 01:00:56:636 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=37m45s978ms).
2022-01-18 01:37:55:644 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=36m59s8ms).
2022-01-18 02:50:16:737 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h12m21s93ms).
2022-01-18 05:06:14:353 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h15m57s616ms).
2022-01-18 07:27:24:196 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h21m9s843ms).
2022-01-18 08:26:39:236 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=59m15s40ms).
2022-01-18 09:14:12:219 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=47m32s983ms).
2022-01-18 10:47:59:338 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h33m47s119ms).
2022-01-18 12:07:19:052 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h19m19s714ms).
2022-01-18 13:54:12:877 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h46m53s825ms).
2022-01-18 15:10:03:716 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h15m50s839ms).
2022-01-18 17:09:23:211 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h59m19s495ms).
2022-01-18 17:59:59:651 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=50m36s440ms).
2022-01-18 19:47:23:416 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h47m23s765ms).
2022-01-18 20:56:15:230 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h8m51s814ms).
2022-01-18 21:26:15:564 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=30m334ms).
2022-01-18 21:56:39:078 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=30m23s514ms).
2022-01-18 21:57:13:974 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 21:57:13:975 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 21:57:13:975 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 21:57:13:975 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles/hot
2022-01-18 21:57:13:975 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getHotArticles
2022-01-18 21:57:13:975 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 21:57:13:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 21:57:13:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 21:57:13:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 21:57:13:975 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10004, status=null, title='Spring boot', description='null', content='null', firstPicture='null', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10005, status=null, title='dd', description='null', content='null', firstPicture='null', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='null'}}], total=null}
2022-01-18 21:57:13:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/categories
2022-01-18 21:57:13:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategories
2022-01-18 21:57:13:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 21:57:13:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CategoryVo{categoryId=2, name='liddffd', articleCount=1}, CategoryVo{categoryId=1, name='Life ', articleCount=1}], total=null}
2022-01-18 21:57:13:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 37ms
2022-01-18 21:57:13:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 21:57:13:975 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 36ms
2022-01-18 21:57:13:975 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 21:57:13:985 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 21:57:13:985 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 21:57:13:985 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 21:57:13:985 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles
2022-01-18 21:57:13:985 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticles
2022-01-18 21:57:13:985 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 21:57:13:985 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}], total=2}
2022-01-18 21:57:13:985 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 46ms
2022-01-18 21:57:13:985 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 21:57:26:521 [Thread-74] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Shutting down ExecutorService 'taskScheduler'
2022-01-18 21:57:26:523 [Thread-74] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'applicationTaskExecutor'
2022-01-18 21:57:26:525 [Thread-74] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Shutdown initiated...
2022-01-18 21:57:26:527 [Thread-74] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Shutdown completed.
2022-01-18 22:09:54:823 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication Starting SunnyBlogApplication on Jinghaos-MacBook-Air.local with PID 6245 (/Users/jinghaoliang/Documents/tech/Project/gitproject/blog/blog_backend/target/classes started by jinghaoliang in /Users/jinghaoliang/Documents/tech/Project/gitproject/blog/blog_backend)
2022-01-18 22:09:54:824 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication No active profile set, falling back to default profiles: default
2022-01-18 22:09:54:856 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-01-18 22:09:54:856 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-01-18 22:09:55:315 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-18 22:09:55:317 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-01-18 22:09:55:346 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2022-01-18 22:09:55:534 [restartedMain] INFO  o.s.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e32b5d10] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-18 22:09:55:756 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8081 (http)
2022-01-18 22:09:55:764 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8081"]
2022-01-18 22:09:55:778 [restartedMain] INFO  org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-01-18 22:09:55:778 [restartedMain] INFO  org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.21]
2022-01-18 22:09:55:856 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-01-18 22:09:55:857 [restartedMain] INFO  org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 1000 ms
2022-01-18 22:09:56:064 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Starting...
2022-01-18 22:09:56:099 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Start completed.
2022-01-18 22:10:20:506 [restartedMain] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor Autowired annotation is not supported on static fields: static com.amazonaws.services.s3.AmazonS3 com.ivan.sunnyblog.web.res.S3ResourceManager.s3Client
2022-01-18 22:10:20:932 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2022-01-18 22:10:21:148 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Initializing ExecutorService 'taskScheduler'
2022-01-18 22:10:21:188 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer LiveReload server is running on port 35729
2022-01-18 22:10:21:235 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8081"]
2022-01-18 22:10:21:253 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8081 (http) with context path ''
2022-01-18 22:10:21:255 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication Started SunnyBlogApplication in 26.68 seconds (JVM running for 27.298)
2022-01-18 22:10:44:235 [http-nio-8081-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-18 22:10:44:235 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-01-18 22:10:44:240 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet Completed initialization in 5 ms
2022-01-18 22:10:44:517 [http-nio-8081-exec-2] INFO  org.jooq.Constants 
                                      
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@  @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@
@@@@@@@@@@@@@@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@  @@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@        @@  @  @  @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Thank you for using jOOQ 3.11.11
                                      
2022-01-18 22:10:44:562 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:10:44:563 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:10:44:563 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:10:44:563 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/categories
2022-01-18 22:10:44:563 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategories
2022-01-18 22:10:44:563 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 22:10:44:563 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:10:44:563 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:10:44:563 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:10:44:563 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles/hot
2022-01-18 22:10:44:563 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getHotArticles
2022-01-18 22:10:44:563 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 22:10:44:563 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CategoryVo{categoryId=2, name='liddffd', articleCount=1}, CategoryVo{categoryId=1, name='Life ', articleCount=1}], total=null}
2022-01-18 22:10:44:563 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10004, status=null, type=null, title='Spring boot', description='null', content='null', firstPicture='null', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10005, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='null'}}], total=null}
2022-01-18 22:10:44:564 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 292ms
2022-01-18 22:10:44:564 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:10:44:564 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 293ms
2022-01-18 22:10:44:564 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:10:44:583 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:10:44:583 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:10:44:583 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:10:44:583 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles
2022-01-18 22:10:44:583 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticles
2022-01-18 22:10:44:583 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:10:44:583 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}], total=2}
2022-01-18 22:10:44:584 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 303ms
2022-01-18 22:10:44:584 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:11:01:521 [http-nio-8081-exec-5] INFO  io.lettuce.core.EpollProvider Starting without optional epoll library
2022-01-18 22:11:01:522 [http-nio-8081-exec-5] INFO  io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-01-18 22:11:01:582 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:11:01:582 [http-nio-8081-exec-5] ERROR com.ivan.sunnyblog.web.aop.ControllerAspect Request failed
2022-01-18 22:11:01:582 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: POST
2022-01-18 22:11:01:582 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/login
2022-01-18 22:11:01:582 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.AccountController.login
2022-01-18 22:11:01:582 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: LoginVo{username='test', password='123456'}
2022-01-18 22:11:01:582 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: null
2022-01-18 22:11:01:582 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 167ms
2022-01-18 22:11:01:582 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:11:01:584 [http-nio-8081-exec-5] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver Resolved [org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost:6379]
2022-01-18 22:11:04:468 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:11:04:469 [http-nio-8081-exec-6] ERROR com.ivan.sunnyblog.web.aop.ControllerAspect Request failed
2022-01-18 22:11:04:469 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: POST
2022-01-18 22:11:04:469 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/login
2022-01-18 22:11:04:469 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.AccountController.login
2022-01-18 22:11:04:469 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: LoginVo{username='test', password='123456'}
2022-01-18 22:11:04:469 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: null
2022-01-18 22:11:04:469 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 6ms
2022-01-18 22:11:04:469 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:11:04:470 [http-nio-8081-exec-6] WARN  org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver Resolved [org.springframework.data.redis.RedisConnectionFailureException: Unable to connect to Redis; nested exception is io.lettuce.core.RedisConnectionException: Unable to connect to localhost:6379]
2022-01-18 22:19:50:895 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:19:50:895 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:19:50:895 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: POST
2022-01-18 22:19:50:895 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/login
2022-01-18 22:19:50:895 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.AccountController.login
2022-01-18 22:19:50:895 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: LoginVo{username='test', password='123456'}
2022-01-18 22:19:50:895 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=LoginResultVo{accessToken='eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2NDI1NzY3OTAsInVzZXJJZCI6MTAwMDAzLCJpYXQiOjE2NDI1NjIzOTB9.Tph85uZ5ot7Cd0lJuR-CSFUJqyq1HhLWBK1bis0ESMo', role=0}, total=null}
2022-01-18 22:19:50:895 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 35ms
2022-01-18 22:19:50:895 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:19:50:956 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:19:50:957 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:19:50:957 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:19:50:957 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:19:50:957 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:19:50:957 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:19:50:957 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}], total=null}
2022-01-18 22:19:50:957 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 14ms
2022-01-18 22:19:50:957 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:20:17:807 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:20:17:808 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:20:17:808 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:20:17:808 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:20:17:808 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:20:17:808 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:20:17:808 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:20:17:808 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:20:17:808 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:20:17:820 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:20:17:820 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:20:17:820 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:20:17:820 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10005
2022-01-18 22:20:17:820 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:20:17:820 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 22:20:17:821 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, total=null}
2022-01-18 22:20:17:821 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 11ms
2022-01-18 22:20:17:822 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:22:04:377 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:22:04:378 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:22:04:378 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:22:04:378 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:22:04:378 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:22:04:378 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:22:04:378 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:22:04:378 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:22:04:378 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:22:05:278 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:22:05:278 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:22:05:279 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:22:05:279 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:22:05:279 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:22:05:279 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:22:05:279 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}], total=null}
2022-01-18 22:22:05:279 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 13ms
2022-01-18 22:22:05:279 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:22:08:775 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:22:08:776 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:22:08:776 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:22:08:776 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:22:08:776 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:22:08:776 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:22:08:776 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:22:08:776 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 22:22:08:776 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:22:08:795 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:22:08:795 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:22:08:795 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:22:08:795 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10005
2022-01-18 22:22:08:795 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:22:08:795 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 22:22:08:795 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, total=null}
2022-01-18 22:22:08:795 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 21ms
2022-01-18 22:22:08:795 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:22:15:250 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:22:15:250 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:22:15:250 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:22:15:250 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:22:15:250 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:22:15:250 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:22:15:250 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}], total=null}
2022-01-18 22:22:15:250 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 15ms
2022-01-18 22:22:15:250 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:22:31:380 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:22:31:380 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:22:31:380 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:22:31:380 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:22:31:380 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:22:31:381 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:22:31:381 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:22:31:381 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:22:31:381 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:22:31:392 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:22:31:393 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:22:31:393 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:22:31:393 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:22:31:393 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:22:31:393 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:22:31:393 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='### test', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}, total=null}
2022-01-18 22:22:31:393 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 11ms
2022-01-18 22:22:31:393 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:27:20:987 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:27:20:992 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:27:20:992 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:27:20:992 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:27:20:992 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:27:20:992 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:27:20:992 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:27:20:992 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 17ms
2022-01-18 22:27:20:992 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:27:21:002 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:27:21:003 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:27:21:003 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:27:21:003 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:27:21:003 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:27:21:003 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:27:21:003 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='### test', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}, total=null}
2022-01-18 22:27:21:003 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 32ms
2022-01-18 22:27:21:003 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:27:46:660 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:27:46:660 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:27:46:660 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:27:46:660 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:27:46:660 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:27:46:660 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:27:46:660 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:27:46:660 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 22:27:46:660 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:27:46:672 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:27:46:673 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:27:46:673 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:27:46:673 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:27:46:673 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:27:46:673 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:27:46:673 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='### test', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}, total=null}
2022-01-18 22:27:46:673 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 13ms
2022-01-18 22:27:46:673 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:27:57:843 [Thread-62] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Shutting down ExecutorService 'taskScheduler'
2022-01-18 22:27:57:844 [Thread-62] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'applicationTaskExecutor'
2022-01-18 22:27:57:845 [Thread-62] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Shutdown initiated...
2022-01-18 22:27:57:846 [Thread-62] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Shutdown completed.
2022-01-18 22:41:01:401 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication Starting SunnyBlogApplication on Jinghaos-MacBook-Air.local with PID 7368 (/Users/jinghaoliang/Documents/tech/Project/gitproject/blog/blog_backend/target/classes started by jinghaoliang in /Users/jinghaoliang/Documents/tech/Project/gitproject/blog/blog_backend)
2022-01-18 22:41:01:402 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication No active profile set, falling back to default profiles: default
2022-01-18 22:41:01:428 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-01-18 22:41:01:428 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-01-18 22:41:01:853 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-18 22:41:01:855 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-01-18 22:41:01:884 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 20ms. Found 0 repository interfaces.
2022-01-18 22:41:02:068 [restartedMain] INFO  o.s.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d40f818b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-18 22:41:02:282 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8081 (http)
2022-01-18 22:41:02:290 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8081"]
2022-01-18 22:41:02:296 [restartedMain] INFO  org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-01-18 22:41:02:296 [restartedMain] INFO  org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.21]
2022-01-18 22:41:02:366 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-01-18 22:41:02:366 [restartedMain] INFO  org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 938 ms
2022-01-18 22:41:02:570 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Starting...
2022-01-18 22:41:02:619 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Start completed.
2022-01-18 22:41:18:312 [restartedMain] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor Autowired annotation is not supported on static fields: static com.amazonaws.services.s3.AmazonS3 com.ivan.sunnyblog.web.res.S3ResourceManager.s3Client
2022-01-18 22:41:18:759 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2022-01-18 22:41:18:964 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Initializing ExecutorService 'taskScheduler'
2022-01-18 22:41:18:992 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer LiveReload server is running on port 35729
2022-01-18 22:41:19:049 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8081"]
2022-01-18 22:41:19:066 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8081 (http) with context path ''
2022-01-18 22:41:19:068 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication Started SunnyBlogApplication in 17.866 seconds (JVM running for 18.373)
2022-01-18 22:41:19:869 [http-nio-8081-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-18 22:41:19:869 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-01-18 22:41:19:883 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet Completed initialization in 14 ms
2022-01-18 22:41:20:390 [http-nio-8081-exec-1] INFO  org.jooq.Constants 
                                      
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@  @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@
@@@@@@@@@@@@@@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@  @@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@        @@  @  @  @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Thank you for using jOOQ 3.11.11
                                      
2022-01-18 22:41:20:478 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:41:20:479 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:41:20:479 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:41:20:479 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:41:20:479 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:41:20:479 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:41:20:479 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:41:20:479 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 440ms
2022-01-18 22:41:20:479 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:41:20:569 [http-nio-8081-exec-2] INFO  io.lettuce.core.EpollProvider Starting without optional epoll library
2022-01-18 22:41:20:570 [http-nio-8081-exec-2] INFO  io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-01-18 22:41:20:672 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:41:20:672 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:41:20:672 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:41:20:672 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:41:20:672 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:41:20:672 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:41:20:672 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='### test', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}, total=null}
2022-01-18 22:41:20:673 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 639ms
2022-01-18 22:41:20:673 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:42:32:948 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:42:32:949 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:42:32:949 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:42:32:949 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:42:32:949 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:42:32:949 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:42:32:949 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:42:32:949 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 13ms
2022-01-18 22:42:32:950 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:42:32:976 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:42:32:976 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:42:32:976 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:42:32:976 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:42:32:976 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:42:32:976 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:42:32:977 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='### test', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}, total=null}
2022-01-18 22:42:32:977 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 42ms
2022-01-18 22:42:32:977 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:42:48:245 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:42:48:245 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:42:48:245 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:42:48:246 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:42:48:246 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:42:48:246 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:42:48:246 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}], total=null}
2022-01-18 22:42:48:246 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 15ms
2022-01-18 22:42:48:246 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:42:55:069 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:42:55:069 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:42:55:070 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:42:55:070 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:42:55:070 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:42:55:070 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:42:55:070 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:42:55:070 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 3ms
2022-01-18 22:42:55:070 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:42:55:077 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:42:55:077 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:42:55:077 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:42:55:077 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:42:55:077 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:42:55:077 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:42:55:077 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=0, type=1, title='dd', description='test', content='### test', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Oct 12 15:57:33 EDT 2021'}}, total=null}
2022-01-18 22:42:55:077 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 10ms
2022-01-18 22:42:55:078 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:43:01:945 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.base.utils.BaseLogger updateing article
2022-01-18 22:43:01:954 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:43:01:954 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:43:01:954 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: POST
2022-01-18 22:43:01:954 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:43:01:954 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.editArticle
2022-01-18 22:43:01:954 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: ArticleDetailVo{categoryId=1, BaseArticleVo{articleId=10003, status=0, type=2, title='dd', description='test', content='### test', firstPicture='', viewCount=null, createDate='null', updateDate='null'}}
2022-01-18 22:43:01:954 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=null, total=null}
2022-01-18 22:43:01:954 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 22ms
2022-01-18 22:43:01:954 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:43:01:998 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:43:01:998 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:43:01:998 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:43:01:998 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:43:01:998 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:43:01:998 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:43:01:998 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:43:01:998 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:43:01:998 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:43:06:974 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:43:06:974 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:43:06:974 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:43:06:974 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:43:06:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:43:06:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:43:06:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:43:06:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 3ms
2022-01-18 22:43:06:975 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:43:07:964 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:43:07:964 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:43:07:964 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:43:07:964 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:43:07:964 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:43:07:964 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:43:07:964 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}], total=null}
2022-01-18 22:43:07:964 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 13ms
2022-01-18 22:43:07:964 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:43:15:789 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:43:15:789 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:43:15:790 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:43:15:790 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:43:15:790 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:43:15:790 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:43:15:790 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:43:15:790 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:43:15:790 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:43:15:795 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:43:15:795 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:43:15:795 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:43:15:795 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:43:15:795 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:43:15:795 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:43:15:795 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='### test', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}, total=null}
2022-01-18 22:43:15:795 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 22:43:15:796 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:36:374 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:36:374 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:36:374 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:36:374 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:45:36:374 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:45:36:374 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:45:36:374 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:45:36:374 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:45:36:374 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:36:380 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:36:380 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:36:380 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:36:380 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:45:36:380 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:45:36:380 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:45:36:380 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='### test', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}, total=null}
2022-01-18 22:45:36:381 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 22:45:36:381 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:38:721 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:38:721 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:38:721 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:38:721 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:45:38:721 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:45:38:721 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:45:38:722 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}], total=null}
2022-01-18 22:45:38:722 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 21ms
2022-01-18 22:45:38:722 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:41:590 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:41:590 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:41:590 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:41:591 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:45:41:591 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:45:41:591 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:45:41:591 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:45:41:591 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 22:45:41:591 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:41:599 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:41:600 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:41:600 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:41:600 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10005
2022-01-18 22:45:41:600 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:45:41:600 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 22:45:41:600 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, total=null}
2022-01-18 22:45:41:600 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 10ms
2022-01-18 22:45:41:601 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:46:302 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:46:303 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:46:303 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:46:303 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:45:46:303 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:45:46:303 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:45:46:303 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:45:46:303 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 22:45:46:303 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:47:158 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:47:158 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:47:158 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:47:158 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:45:47:158 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:45:47:158 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:45:47:158 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}], total=null}
2022-01-18 22:45:47:159 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 15ms
2022-01-18 22:45:47:159 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:49:164 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:49:164 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:49:164 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:49:164 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:45:49:164 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:45:49:164 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:45:49:165 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:45:49:165 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:45:49:165 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:49:177 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:49:177 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:49:177 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:49:177 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10004
2022-01-18 22:45:49:177 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:45:49:177 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 22:45:49:177 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='rererer![test.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636947281578_test.png)', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, total=null}
2022-01-18 22:45:49:178 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 12ms
2022-01-18 22:45:49:178 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:54:728 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:54:728 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:54:728 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:54:728 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:45:54:728 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:45:54:729 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:45:54:729 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:45:54:729 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:45:54:729 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:55:556 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:55:556 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:55:556 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:55:556 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:45:55:556 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:45:55:556 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:45:55:556 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}], total=null}
2022-01-18 22:45:55:556 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 7ms
2022-01-18 22:45:55:556 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:57:879 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:57:879 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:57:879 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:57:879 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:45:57:879 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:45:57:879 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:45:57:879 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:45:57:879 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 22:45:57:879 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:45:57:884 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:45:57:885 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:45:57:885 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:45:57:885 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10005
2022-01-18 22:45:57:885 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:45:57:885 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 22:45:57:885 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, total=null}
2022-01-18 22:45:57:885 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 7ms
2022-01-18 22:45:57:885 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:46:06:228 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.base.utils.BaseLogger updateing article
2022-01-18 22:46:06:233 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:46:06:233 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:46:06:233 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: POST
2022-01-18 22:46:06:233 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:46:06:233 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.editArticle
2022-01-18 22:46:06:233 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: ArticleDetailVo{categoryId=1, BaseArticleVo{articleId=10005, status=1, type=2, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=null, createDate='null', updateDate='null'}}
2022-01-18 22:46:06:233 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=null, total=null}
2022-01-18 22:46:06:233 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 6ms
2022-01-18 22:46:06:233 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:46:06:272 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:46:06:272 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:46:06:272 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:46:06:272 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:46:06:272 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:46:06:272 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:46:06:272 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:46:06:272 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:46:06:272 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:18:570 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:18:571 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:18:571 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:18:571 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:47:18:571 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:47:18:571 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:47:18:571 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:47:18:571 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 22:47:18:571 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:20:034 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:20:034 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:20:034 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:20:034 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:47:20:034 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:47:20:034 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:47:20:034 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:46:06 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}], total=null}
2022-01-18 22:47:20:034 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 22:47:20:034 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:22:499 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:22:499 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:22:500 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:22:500 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:47:22:500 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:47:22:500 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:47:22:500 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:47:22:500 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:47:22:500 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:22:506 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:22:506 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:22:506 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:22:506 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10004
2022-01-18 22:47:22:506 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:47:22:506 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 22:47:22:506 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='rererer![test.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636947281578_test.png)', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, total=null}
2022-01-18 22:47:22:507 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 9ms
2022-01-18 22:47:22:507 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:28:253 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:28:253 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:28:253 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:28:253 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:47:28:253 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:47:28:253 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:47:28:253 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:47:28:253 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:47:28:253 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:30:440 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:30:440 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:30:440 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:30:440 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:47:30:440 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:47:30:440 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:47:30:440 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:46:06 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}], total=null}
2022-01-18 22:47:30:441 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 22:47:30:441 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:32:241 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:32:241 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:32:241 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:32:242 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:47:32:242 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:47:32:242 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:47:32:242 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:47:32:242 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 22:47:32:242 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:32:247 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:32:247 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:32:247 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:32:247 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10005
2022-01-18 22:47:32:247 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:47:32:247 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 22:47:32:247 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:46:06 EST 2022'}}, total=null}
2022-01-18 22:47:32:247 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 22:47:32:247 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:34:124 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:34:125 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:34:125 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:34:125 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:47:34:125 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:47:34:125 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:47:34:125 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:47:34:125 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:47:34:125 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:35:067 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:35:067 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:35:067 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:35:067 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:47:35:067 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:47:35:067 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:47:35:067 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:46:06 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}], total=null}
2022-01-18 22:47:35:067 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 22:47:35:067 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:36:803 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:36:803 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:36:803 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:36:803 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:47:36:803 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:47:36:803 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:47:36:803 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:47:36:803 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 22:47:36:803 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:47:36:809 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:47:36:809 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:47:36:809 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:47:36:809 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:47:36:809 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:47:36:809 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:47:36:809 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='### test', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}, total=null}
2022-01-18 22:47:36:809 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 7ms
2022-01-18 22:47:36:809 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:48:56:463 [Thread-44] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Shutting down ExecutorService 'taskScheduler'
2022-01-18 22:48:56:464 [Thread-44] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'applicationTaskExecutor'
2022-01-18 22:48:56:465 [Thread-44] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Shutdown initiated...
2022-01-18 22:48:56:466 [Thread-44] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Shutdown completed.
2022-01-18 22:50:13:439 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication Starting SunnyBlogApplication on Jinghaos-MacBook-Air.local with PID 7471 (/Users/jinghaoliang/Documents/tech/Project/gitproject/blog/blog_backend/target/classes started by jinghaoliang in /Users/jinghaoliang/Documents/tech/Project/gitproject/blog/blog_backend)
2022-01-18 22:50:13:440 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication No active profile set, falling back to default profiles: default
2022-01-18 22:50:13:465 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-01-18 22:50:13:465 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-01-18 22:50:13:854 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-18 22:50:13:855 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-01-18 22:50:13:884 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2022-01-18 22:50:14:071 [restartedMain] INFO  o.s.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$17b46471] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-18 22:50:14:277 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8081 (http)
2022-01-18 22:50:14:285 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8081"]
2022-01-18 22:50:14:292 [restartedMain] INFO  org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-01-18 22:50:14:292 [restartedMain] INFO  org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.21]
2022-01-18 22:50:14:364 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-01-18 22:50:14:364 [restartedMain] INFO  org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 899 ms
2022-01-18 22:50:14:535 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Starting...
2022-01-18 22:50:14:569 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Start completed.
2022-01-18 22:50:30:000 [restartedMain] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor Autowired annotation is not supported on static fields: static com.amazonaws.services.s3.AmazonS3 com.ivan.sunnyblog.web.res.S3ResourceManager.s3Client
2022-01-18 22:50:30:434 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2022-01-18 22:50:30:639 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Initializing ExecutorService 'taskScheduler'
2022-01-18 22:50:30:666 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer LiveReload server is running on port 35729
2022-01-18 22:50:30:716 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8081"]
2022-01-18 22:50:30:733 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8081 (http) with context path ''
2022-01-18 22:50:30:735 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication Started SunnyBlogApplication in 17.515 seconds (JVM running for 18.094)
2022-01-18 22:53:13:185 [http-nio-8081-exec-2] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-18 22:53:13:185 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-01-18 22:53:13:193 [http-nio-8081-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet Completed initialization in 8 ms
2022-01-18 22:53:13:439 [http-nio-8081-exec-1] INFO  org.jooq.Constants 
                                      
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@  @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@
@@@@@@@@@@@@@@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@  @@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@        @@  @  @  @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Thank you for using jOOQ 3.11.11
                                      
2022-01-18 22:53:13:493 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:13:493 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:13:493 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:13:493 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:53:13:493 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:53:13:493 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:53:13:493 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:53:13:493 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 269ms
2022-01-18 22:53:13:493 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:13:596 [http-nio-8081-exec-1] INFO  io.lettuce.core.EpollProvider Starting without optional epoll library
2022-01-18 22:53:13:605 [http-nio-8081-exec-1] INFO  io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-01-18 22:53:13:697 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:13:697 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:13:697 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:13:697 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:53:13:697 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:53:13:698 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:53:13:698 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='### test', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:43:01 EST 2022'}}, total=null}
2022-01-18 22:53:13:698 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 477ms
2022-01-18 22:53:13:698 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:19:988 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.base.utils.BaseLogger =========== para ====== ArticleDetailVo{categoryId=1, BaseArticleVo{articleId=10003, status=1, type=2, title='dd', description='test', content='### test', firstPicture='', viewCount=null, createDate='null', updateDate='null'}}
2022-01-18 22:53:20:001 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.base.utils.BaseLogger updateing article
2022-01-18 22:53:20:009 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:20:009 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:20:009 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: POST
2022-01-18 22:53:20:009 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:53:20:009 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.editArticle
2022-01-18 22:53:20:009 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: ArticleDetailVo{categoryId=1, BaseArticleVo{articleId=10003, status=1, type=2, title='dd', description='test', content='### test', firstPicture='', viewCount=null, createDate='null', updateDate='null'}}
2022-01-18 22:53:20:009 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=null, total=null}
2022-01-18 22:53:20:009 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 21ms
2022-01-18 22:53:20:009 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:20:053 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:20:053 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:20:053 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:20:053 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:53:20:053 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:53:20:053 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:53:20:053 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:53:20:053 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:53:20:053 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:26:223 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:26:223 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:26:223 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:26:223 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:53:26:224 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:53:26:224 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:53:26:224 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:53:26:224 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 3ms
2022-01-18 22:53:26:224 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:28:316 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:28:316 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:28:316 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:28:316 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:53:28:316 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:53:28:316 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:53:28:316 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:46:06 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=null}
2022-01-18 22:53:28:316 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 15ms
2022-01-18 22:53:28:316 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:35:899 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:35:900 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:35:900 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:35:900 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:53:35:900 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:53:35:900 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:53:35:900 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:53:35:900 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:53:35:900 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:35:907 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:35:907 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:35:908 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:35:908 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10003
2022-01-18 22:53:35:908 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:53:35:908 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10003
2022-01-18 22:53:35:908 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='### test', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}, total=null}
2022-01-18 22:53:35:908 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 10ms
2022-01-18 22:53:35:908 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:38:669 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:38:669 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:38:669 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:38:669 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:53:38:669 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:53:38:669 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:53:38:669 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:53:38:669 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:53:38:669 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:39:690 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:39:690 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:39:690 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:39:690 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:53:39:690 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:53:39:690 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:53:39:690 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:46:06 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=null}
2022-01-18 22:53:39:690 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 12ms
2022-01-18 22:53:39:691 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:42:029 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:42:029 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:42:030 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:42:030 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:53:42:030 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:53:42:030 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:53:42:030 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:53:42:030 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:53:42:030 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:53:42:035 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:53:42:035 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:53:42:035 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:53:42:035 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10005
2022-01-18 22:53:42:035 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:53:42:035 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 22:53:42:035 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:46:06 EST 2022'}}, total=null}
2022-01-18 22:53:42:035 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 22:53:42:035 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:54:08:792 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.base.utils.BaseLogger =========== para ====== ArticleDetailVo{categoryId=1, BaseArticleVo{articleId=10005, status=1, type=2, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=null, createDate='null', updateDate='null'}}
2022-01-18 22:54:08:793 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.base.utils.BaseLogger updateing article
2022-01-18 22:54:08:800 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:54:08:801 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:54:08:801 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: POST
2022-01-18 22:54:08:801 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:54:08:801 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.editArticle
2022-01-18 22:54:08:801 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: ArticleDetailVo{categoryId=1, BaseArticleVo{articleId=10005, status=1, type=2, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=null, createDate='null', updateDate='null'}}
2022-01-18 22:54:08:801 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=null, total=null}
2022-01-18 22:54:08:801 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 22:54:08:801 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:54:08:854 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:54:08:854 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:54:08:854 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:54:08:854 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:54:08:854 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:54:08:854 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:54:08:854 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:54:08:854 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 5ms
2022-01-18 22:54:08:854 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:55:14:272 [Thread-44] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Shutting down ExecutorService 'taskScheduler'
2022-01-18 22:55:14:273 [Thread-44] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'applicationTaskExecutor'
2022-01-18 22:55:14:274 [Thread-44] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Shutdown initiated...
2022-01-18 22:55:14:276 [Thread-44] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Shutdown completed.
2022-01-18 22:55:18:612 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication Starting SunnyBlogApplication on Jinghaos-MacBook-Air.local with PID 7554 (/Users/jinghaoliang/Documents/tech/Project/gitproject/blog/blog_backend/target/classes started by jinghaoliang in /Users/jinghaoliang/Documents/tech/Project/gitproject/blog/blog_backend)
2022-01-18 22:55:18:614 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication No active profile set, falling back to default profiles: default
2022-01-18 22:55:18:646 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2022-01-18 22:55:18:646 [restartedMain] INFO  org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2022-01-18 22:55:19:085 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2022-01-18 22:55:19:086 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data repositories in DEFAULT mode.
2022-01-18 22:55:19:115 [restartedMain] INFO  org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 21ms. Found 0 repository interfaces.
2022-01-18 22:55:19:302 [restartedMain] INFO  o.s.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9937234b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2022-01-18 22:55:19:536 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8081 (http)
2022-01-18 22:55:19:544 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8081"]
2022-01-18 22:55:19:550 [restartedMain] INFO  org.apache.catalina.core.StandardService Starting service [Tomcat]
2022-01-18 22:55:19:550 [restartedMain] INFO  org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.21]
2022-01-18 22:55:19:624 [restartedMain] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2022-01-18 22:55:19:624 [restartedMain] INFO  org.springframework.web.context.ContextLoader Root WebApplicationContext: initialization completed in 978 ms
2022-01-18 22:55:19:806 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Starting...
2022-01-18 22:55:19:844 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource HikariPool-1 - Start completed.
2022-01-18 22:55:36:188 [restartedMain] INFO  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor Autowired annotation is not supported on static fields: static com.amazonaws.services.s3.AmazonS3 com.ivan.sunnyblog.web.res.S3ResourceManager.s3Client
2022-01-18 22:55:36:638 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2022-01-18 22:55:36:845 [restartedMain] INFO  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler Initializing ExecutorService 'taskScheduler'
2022-01-18 22:55:36:873 [restartedMain] INFO  org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer LiveReload server is running on port 35729
2022-01-18 22:55:36:921 [restartedMain] INFO  org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8081"]
2022-01-18 22:55:36:937 [restartedMain] INFO  org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8081 (http) with context path ''
2022-01-18 22:55:36:940 [restartedMain] INFO  com.ivan.sunnyblog.SunnyBlogApplication Started SunnyBlogApplication in 18.565 seconds (JVM running for 19.183)
2022-01-18 22:56:22:476 [http-nio-8081-exec-1] INFO  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2022-01-18 22:56:22:476 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2022-01-18 22:56:22:482 [http-nio-8081-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet Completed initialization in 6 ms
2022-01-18 22:56:22:628 [http-nio-8081-exec-1] INFO  org.jooq.Constants 
                                      
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@  @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@        @@@@@@@@@@
@@@@@@@@@@@@@@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@  @@@@  @@  @@    @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@    @@  @@  @@@@  @@@@@@@@@@
@@@@@@@@@@        @@  @  @  @@@@@@@@@@
@@@@@@@@@@        @@        @@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@  @@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  Thank you for using jOOQ 3.11.11
                                      
2022-01-18 22:56:22:812 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:56:22:812 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:56:22:812 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:56:22:812 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:56:22:813 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:56:22:813 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:56:22:813 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=null}
2022-01-18 22:56:22:813 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 299ms
2022-01-18 22:56:22:813 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:56:31:745 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:56:31:745 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:56:31:745 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:56:31:745 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:56:31:745 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:56:31:745 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:56:31:745 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:56:31:745 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 22:56:31:745 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:56:31:815 [http-nio-8081-exec-2] INFO  io.lettuce.core.EpollProvider Starting without optional epoll library
2022-01-18 22:56:31:815 [http-nio-8081-exec-2] INFO  io.lettuce.core.KqueueProvider Starting without optional kqueue library
2022-01-18 22:56:32:112 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:56:32:112 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:56:32:112 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:56:32:112 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10004
2022-01-18 22:56:32:112 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:56:32:112 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 22:56:32:112 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=1, title='Spring boot', description='rerwerwer', content='rererer![test.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636947281578_test.png)', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Mon Jan 10 15:37:25 EST 2022'}}, total=null}
2022-01-18 22:56:32:112 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 372ms
2022-01-18 22:56:32:112 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:56:37:123 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.base.utils.BaseLogger =========== para ====== ArticleDetailVo{categoryId=2, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='rererer![test.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636947281578_test.png)', firstPicture='', viewCount=null, createDate='null', updateDate='null'}}
2022-01-18 22:56:37:138 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.base.utils.BaseLogger updateing article
2022-01-18 22:56:37:146 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:56:37:147 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:56:37:147 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: POST
2022-01-18 22:56:37:147 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:56:37:147 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.editArticle
2022-01-18 22:56:37:147 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: ArticleDetailVo{categoryId=2, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='rererer![test.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636947281578_test.png)', firstPicture='', viewCount=null, createDate='null', updateDate='null'}}
2022-01-18 22:56:37:147 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=null, total=null}
2022-01-18 22:56:37:147 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 23ms
2022-01-18 22:56:37:147 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:56:37:180 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:56:37:181 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:56:37:181 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:56:37:181 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:56:37:181 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:56:37:181 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:56:37:181 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:56:37:181 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 22:56:37:181 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:56:40:462 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:56:40:462 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:56:40:462 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:56:40:462 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:56:40:462 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:56:40:462 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:56:40:462 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:56:40:462 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:56:40:462 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:56:41:576 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:56:41:576 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:56:41:576 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:56:41:576 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article
2022-01-18 22:56:41:576 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleList
2022-01-18 22:56:41:576 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=20, categoryId=null, total=null}
2022-01-18 22:56:41:576 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=null}
2022-01-18 22:56:41:576 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 12ms
2022-01-18 22:56:41:576 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:57:32:513 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:57:32:516 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:57:32:517 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:57:32:517 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:57:32:517 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:57:32:517 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:57:32:517 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:57:32:517 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 5ms
2022-01-18 22:57:32:518 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:57:32:531 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:57:32:531 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:57:32:531 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:57:32:531 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/article/10004
2022-01-18 22:57:32:531 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getArticleDetail
2022-01-18 22:57:32:531 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 22:57:32:531 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='rererer![test.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636947281578_test.png)', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, total=null}
2022-01-18 22:57:32:531 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 23ms
2022-01-18 22:57:32:531 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:58:07:873 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:58:07:873 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:58:07:873 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:58:07:873 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/admin/category
2022-01-18 22:58:07:873 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategoryList
2022-01-18 22:58:07:873 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 22:58:07:874 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[Category (1, Life ), Category (2, liddffd)], total=null}
2022-01-18 22:58:07:874 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 22:58:07:874 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:58:16:943 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:58:16:943 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:58:16:943 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:58:16:943 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles/hot
2022-01-18 22:58:16:943 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getHotArticles
2022-01-18 22:58:16:943 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 22:58:16:943 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10004, status=null, type=null, title='Spring boot', description='null', content='null', firstPicture='null', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10005, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10003, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='null'}}], total=null}
2022-01-18 22:58:16:944 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 16ms
2022-01-18 22:58:16:944 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:58:16:954 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:58:16:954 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:58:16:954 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:58:16:954 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/categories
2022-01-18 22:58:16:954 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategories
2022-01-18 22:58:16:954 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 22:58:16:954 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CategoryVo{categoryId=2, name='liddffd', articleCount=1}, CategoryVo{categoryId=1, name='Life ', articleCount=2}], total=null}
2022-01-18 22:58:16:954 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 26ms
2022-01-18 22:58:16:954 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 22:58:16:957 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 22:58:16:957 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 22:58:16:957 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 22:58:16:957 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles
2022-01-18 22:58:16:957 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticles
2022-01-18 22:58:16:957 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=1, categoryId=null, total=null}
2022-01-18 22:58:16:957 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}], total=3}
2022-01-18 22:58:16:957 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 19ms
2022-01-18 22:58:16:957 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:02:40:254 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:02:40:254 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:02:40:255 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:02:40:255 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles/hot
2022-01-18 23:02:40:255 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getHotArticles
2022-01-18 23:02:40:255 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:02:40:255 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10004, status=null, type=null, title='Spring boot', description='null', content='null', firstPicture='null', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10005, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10003, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='null'}}], total=null}
2022-01-18 23:02:40:255 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 19ms
2022-01-18 23:02:40:255 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:02:40:264 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:02:40:264 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:02:40:264 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:02:40:264 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/categories
2022-01-18 23:02:40:265 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategories
2022-01-18 23:02:40:265 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:02:40:265 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CategoryVo{categoryId=2, name='liddffd', articleCount=1}, CategoryVo{categoryId=1, name='Life ', articleCount=2}], total=null}
2022-01-18 23:02:40:265 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 24ms
2022-01-18 23:02:40:265 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:02:40:269 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:02:40:269 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:02:40:269 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:02:40:269 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles
2022-01-18 23:02:40:269 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticles
2022-01-18 23:02:40:270 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 23:02:40:270 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=3}
2022-01-18 23:02:40:270 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 33ms
2022-01-18 23:02:40:270 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:04:36:326 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:04:36:326 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:04:36:326 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:04:36:327 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:04:36:327 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:04:36:327 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:04:36:327 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/categories
2022-01-18 23:04:36:327 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles/hot
2022-01-18 23:04:36:327 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategories
2022-01-18 23:04:36:327 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getHotArticles
2022-01-18 23:04:36:327 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:04:36:327 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:04:36:327 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CategoryVo{categoryId=2, name='liddffd', articleCount=1}, CategoryVo{categoryId=1, name='Life ', articleCount=2}], total=null}
2022-01-18 23:04:36:327 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10004, status=null, type=null, title='Spring boot', description='null', content='null', firstPicture='null', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10005, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10003, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='null'}}], total=null}
2022-01-18 23:04:36:327 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 3ms
2022-01-18 23:04:36:327 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 3ms
2022-01-18 23:04:36:327 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:04:36:327 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:04:36:331 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:04:36:331 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:04:36:331 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:04:36:331 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles
2022-01-18 23:04:36:331 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticles
2022-01-18 23:04:36:331 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 23:04:36:331 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=3}
2022-01-18 23:04:36:331 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 12ms
2022-01-18 23:04:36:331 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:06:31:287 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:06:31:287 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:06:31:288 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:06:31:288 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles/hot
2022-01-18 23:06:31:288 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getHotArticles
2022-01-18 23:06:31:288 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:06:31:288 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10004, status=null, type=null, title='Spring boot', description='null', content='null', firstPicture='null', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10005, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10003, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='null'}}], total=null}
2022-01-18 23:06:31:288 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 16ms
2022-01-18 23:06:31:288 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:06:31:299 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:06:31:299 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:06:31:299 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:06:31:299 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/categories
2022-01-18 23:06:31:299 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategories
2022-01-18 23:06:31:299 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:06:31:299 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CategoryVo{categoryId=2, name='liddffd', articleCount=1}, CategoryVo{categoryId=1, name='Life ', articleCount=2}], total=null}
2022-01-18 23:06:31:299 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 28ms
2022-01-18 23:06:31:299 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:06:31:333 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:06:31:333 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:06:31:333 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:06:31:333 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles
2022-01-18 23:06:31:333 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticles
2022-01-18 23:06:31:333 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 23:06:31:333 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=3}
2022-01-18 23:06:31:333 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 62ms
2022-01-18 23:06:31:333 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:07:01:667 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:07:01:667 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:07:01:667 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:07:01:667 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/article/10005
2022-01-18 23:07:01:667 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticleDetail
2022-01-18 23:07:01:668 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:07:01:668 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, total=null}
2022-01-18 23:07:01:668 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 14ms
2022-01-18 23:07:01:668 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:07:01:678 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:07:01:678 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:07:01:678 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:07:01:678 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:07:01:678 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:07:01:678 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:07:01:678 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:07:01:678 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:07:01:678 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:07:01:678 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:07:01:678 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:07:01:678 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:07:01:678 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:07:01:678 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:07:01:678 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 17ms
2022-01-18 23:07:01:678 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 17ms
2022-01-18 23:07:01:678 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:07:01:678 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:07:01:731 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:07:01:731 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:07:01:731 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:07:01:731 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:07:01:731 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:07:01:731 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:07:01:731 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:07:01:731 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 5ms
2022-01-18 23:07:01:732 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:07:59:496 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:07:59:497 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:07:59:497 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:07:59:497 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:07:59:497 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:07:59:497 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:07:59:497 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:07:59:497 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 34ms
2022-01-18 23:07:59:497 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:07:59:506 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:07:59:506 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:07:59:506 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:07:59:506 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:07:59:506 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:07:59:506 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:07:59:506 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:07:59:506 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 43ms
2022-01-18 23:07:59:506 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:07:59:514 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:07:59:515 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:07:59:515 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:07:59:515 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/article/10005
2022-01-18 23:07:59:515 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticleDetail
2022-01-18 23:07:59:515 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:07:59:515 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, total=null}
2022-01-18 23:07:59:515 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 52ms
2022-01-18 23:07:59:515 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:08:00:121 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:08:00:121 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:08:00:121 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:08:00:121 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:08:00:121 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:08:00:121 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:08:00:121 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:08:00:121 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 6ms
2022-01-18 23:08:00:121 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:09:477 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:09:477 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:09:477 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:09:477 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:09:09:477 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:09:09:477 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:09:09:477 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:09:09:477 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 26ms
2022-01-18 23:09:09:477 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:09:483 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:09:484 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:09:484 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:09:484 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/article/10005
2022-01-18 23:09:09:484 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticleDetail
2022-01-18 23:09:09:484 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:09:09:484 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, total=null}
2022-01-18 23:09:09:484 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 32ms
2022-01-18 23:09:09:484 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:09:486 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:09:486 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:09:486 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:09:486 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:09:09:486 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:09:09:486 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:09:09:486 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:09:09:486 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 34ms
2022-01-18 23:09:09:486 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:10:148 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:10:149 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:10:149 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:10:149 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:09:10:149 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:09:10:149 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:09:10:149 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:09:10:149 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 4ms
2022-01-18 23:09:10:149 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:11:812 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:11:812 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:11:812 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:11:812 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:11:812 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:11:812 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:11:812 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles/hot
2022-01-18 23:09:11:812 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getHotArticles
2022-01-18 23:09:11:812 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:09:11:812 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/categories
2022-01-18 23:09:11:812 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10004, status=null, type=null, title='Spring boot', description='null', content='null', firstPicture='null', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10005, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10003, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='null'}}], total=null}
2022-01-18 23:09:11:812 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategories
2022-01-18 23:09:11:812 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 23:09:11:813 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:11:813 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:09:11:813 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CategoryVo{categoryId=2, name='liddffd', articleCount=1}, CategoryVo{categoryId=1, name='Life ', articleCount=2}], total=null}
2022-01-18 23:09:11:813 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 23:09:11:813 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:11:818 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:11:819 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:11:819 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:11:819 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles
2022-01-18 23:09:11:819 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticles
2022-01-18 23:09:11:819 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 23:09:11:819 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=3}
2022-01-18 23:09:11:819 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 23:09:11:819 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:13:991 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:13:991 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:13:991 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:13:991 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/article/10004
2022-01-18 23:09:13:991 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticleDetail
2022-01-18 23:09:13:991 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:09:13:991 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='rererer![test.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636947281578_test.png)', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, total=null}
2022-01-18 23:09:13:991 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 8ms
2022-01-18 23:09:13:991 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:14:000 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:14:000 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:14:000 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:14:000 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10004
2022-01-18 23:09:14:000 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:09:14:000 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:09:14:000 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CommentListVo{commentId=18createdate=Sun Jan 09 10:06:04 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/81.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsdf@qq.com', nickname='sf', parentCommentNickname='null', content='sdfsf', status='0'}}, CommentListVo{commentId=17createdate=Sun Jan 09 10:05:33 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/57.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfsf', parentCommentNickname='null', content='hdsfsd', status='0'}}, CommentListVo{commentId=16createdate=Sun Jan 09 10:03:48 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/90.png, replyComments=[CommentListVo{commentId=19createdate=Mon Jan 10 09:47:47 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/73.png, replyComments=[], CommentVo=CommentVo{parentCommentId=16, articleId=10004, email='sdfsd@Ck.com', nickname='ivan', parentCommentNickname='sfs@ss.c', content='dfjgg', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfs@ss.c', parentCommentNickname='null', content='what?', status='0'}}, CommentListVo{commentId=11createdate=Wed Dec 01 22:44:50 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=12createdate=Wed Dec 01 22:45:18 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=15createdate=Wed Dec 01 23:42:17 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='555@test.com', nickname='555', parentCommentNickname='jess', content='555', status='0'}}, CommentListVo{commentId=13createdate=Wed Dec 01 22:45:56 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=14createdate=Wed Dec 01 22:46:22 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=13, articleId=10004, email='hah@gmail.com', nickname='haha', parentCommentNickname='test', content='hahah', status='0'}}], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='test@gg.com', nickname='test', parentCommentNickname='jess', content='great!', status='0'}}], CommentVo=CommentVo{parentCommentId=11, articleId=10004, email='jess@gmail.com', nickname='jess', parentCommentNickname='ivan', content='I am doing well. You?', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='ivanliang0818@gmail.com', nickname='ivan', parentCommentNickname='null', content='How are you doing today?', status='0'}}], total=4}
2022-01-18 23:09:14:000 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 17ms
2022-01-18 23:09:14:000 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:14:001 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:14:001 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:14:001 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:14:001 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10004
2022-01-18 23:09:14:001 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:09:14:001 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:09:14:001 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CommentListVo{commentId=18createdate=Sun Jan 09 10:06:04 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/81.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsdf@qq.com', nickname='sf', parentCommentNickname='null', content='sdfsf', status='0'}}, CommentListVo{commentId=17createdate=Sun Jan 09 10:05:33 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/57.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfsf', parentCommentNickname='null', content='hdsfsd', status='0'}}, CommentListVo{commentId=16createdate=Sun Jan 09 10:03:48 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/90.png, replyComments=[CommentListVo{commentId=19createdate=Mon Jan 10 09:47:47 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/73.png, replyComments=[], CommentVo=CommentVo{parentCommentId=16, articleId=10004, email='sdfsd@Ck.com', nickname='ivan', parentCommentNickname='sfs@ss.c', content='dfjgg', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfs@ss.c', parentCommentNickname='null', content='what?', status='0'}}, CommentListVo{commentId=11createdate=Wed Dec 01 22:44:50 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=12createdate=Wed Dec 01 22:45:18 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=15createdate=Wed Dec 01 23:42:17 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='555@test.com', nickname='555', parentCommentNickname='jess', content='555', status='0'}}, CommentListVo{commentId=13createdate=Wed Dec 01 22:45:56 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=14createdate=Wed Dec 01 22:46:22 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=13, articleId=10004, email='hah@gmail.com', nickname='haha', parentCommentNickname='test', content='hahah', status='0'}}], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='test@gg.com', nickname='test', parentCommentNickname='jess', content='great!', status='0'}}], CommentVo=CommentVo{parentCommentId=11, articleId=10004, email='jess@gmail.com', nickname='jess', parentCommentNickname='ivan', content='I am doing well. You?', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='ivanliang0818@gmail.com', nickname='ivan', parentCommentNickname='null', content='How are you doing today?', status='0'}}], total=4}
2022-01-18 23:09:14:002 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 19ms
2022-01-18 23:09:14:002 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:14:024 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:14:024 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:14:024 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:14:024 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10004
2022-01-18 23:09:14:024 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:09:14:024 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:09:14:024 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CommentListVo{commentId=18createdate=Sun Jan 09 10:06:04 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/81.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsdf@qq.com', nickname='sf', parentCommentNickname='null', content='sdfsf', status='0'}}, CommentListVo{commentId=17createdate=Sun Jan 09 10:05:33 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/57.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfsf', parentCommentNickname='null', content='hdsfsd', status='0'}}, CommentListVo{commentId=16createdate=Sun Jan 09 10:03:48 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/90.png, replyComments=[CommentListVo{commentId=19createdate=Mon Jan 10 09:47:47 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/73.png, replyComments=[], CommentVo=CommentVo{parentCommentId=16, articleId=10004, email='sdfsd@Ck.com', nickname='ivan', parentCommentNickname='sfs@ss.c', content='dfjgg', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfs@ss.c', parentCommentNickname='null', content='what?', status='0'}}, CommentListVo{commentId=11createdate=Wed Dec 01 22:44:50 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=12createdate=Wed Dec 01 22:45:18 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=15createdate=Wed Dec 01 23:42:17 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='555@test.com', nickname='555', parentCommentNickname='jess', content='555', status='0'}}, CommentListVo{commentId=13createdate=Wed Dec 01 22:45:56 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=14createdate=Wed Dec 01 22:46:22 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=13, articleId=10004, email='hah@gmail.com', nickname='haha', parentCommentNickname='test', content='hahah', status='0'}}], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='test@gg.com', nickname='test', parentCommentNickname='jess', content='great!', status='0'}}], CommentVo=CommentVo{parentCommentId=11, articleId=10004, email='jess@gmail.com', nickname='jess', parentCommentNickname='ivan', content='I am doing well. You?', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='ivanliang0818@gmail.com', nickname='ivan', parentCommentNickname='null', content='How are you doing today?', status='0'}}], total=4}
2022-01-18 23:09:14:024 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 10ms
2022-01-18 23:09:14:024 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:24:106 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:24:107 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:24:107 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:24:107 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/categories
2022-01-18 23:09:24:107 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategories
2022-01-18 23:09:24:107 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:09:24:107 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CategoryVo{categoryId=2, name='liddffd', articleCount=1}, CategoryVo{categoryId=1, name='Life ', articleCount=2}], total=null}
2022-01-18 23:09:24:107 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 23:09:24:107 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:24:109 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:24:110 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:24:110 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:24:110 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles/hot
2022-01-18 23:09:24:110 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getHotArticles
2022-01-18 23:09:24:110 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:09:24:110 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10004, status=null, type=null, title='Spring boot', description='null', content='null', firstPicture='null', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10005, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10003, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='null'}}], total=null}
2022-01-18 23:09:24:110 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 5ms
2022-01-18 23:09:24:110 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:24:127 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:24:128 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:24:128 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:24:128 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles
2022-01-18 23:09:24:128 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticles
2022-01-18 23:09:24:128 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 23:09:24:128 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=3}
2022-01-18 23:09:24:128 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 23ms
2022-01-18 23:09:24:128 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:26:137 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:26:138 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:26:137 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:26:138 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:26:138 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:09:26:138 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:09:26:138 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:26:138 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:09:26:138 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:26:138 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=4}
2022-01-18 23:09:26:138 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:09:26:138 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 23:09:26:138 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:09:26:138 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:26:138 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:09:26:138 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=4}
2022-01-18 23:09:26:138 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 23:09:26:138 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:26:141 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:26:141 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:26:141 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:26:141 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/article/10005
2022-01-18 23:09:26:141 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticleDetail
2022-01-18 23:09:26:141 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:09:26:141 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, total=null}
2022-01-18 23:09:26:141 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 10ms
2022-01-18 23:09:26:141 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:09:26:166 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:09:26:166 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:09:26:166 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:09:26:166 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:09:26:166 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:09:26:166 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:09:26:166 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=4}
2022-01-18 23:09:26:166 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 23:09:26:167 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:10:31:789 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:10:31:789 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:10:31:789 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:10:31:789 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:10:31:789 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:10:31:789 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:10:31:789 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:10:31:789 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 11ms
2022-01-18 23:10:31:789 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:10:31:792 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:10:31:792 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:10:31:792 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:10:31:792 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:10:31:792 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:10:31:792 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:10:31:792 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:10:31:792 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:10:31:792 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:10:31:792 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:10:31:792 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/article/10005
2022-01-18 23:10:31:792 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 10ms
2022-01-18 23:10:31:792 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticleDetail
2022-01-18 23:10:31:792 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:10:31:792 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:10:31:792 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='| Head | Head | Head | Head |
| --- | --- | --- | --- |
| Data | Data | Data | Data |
| Data | Data | Data | Data |

## 手把手教你写一个markdown编辑器

> 笔者在18年年末的时候接到一个开发任务——搭建一个AI项目的开放平台，其中的产品文档为转化为HTML格式的markdown文档。考虑到文档的即时更新，将文档信息做成了Ajax接口的形式。因此管理后台只需将textarea表单的内容通过markdown解析器进行HTML格式转化，然后将markdown内容和经转化的HTML文档都保存到数据库即可。
> 基本需求完成后，为了更好的用户体验，考虑将常用的编辑功能添加进来。改进版不仅支持了常用的文本编辑功能，还实现的UI界面的配置化，自定义语法解析器。本着造福伸手党的目的，以及积累些开源经验，笔者将该react 组件 [react-markdown-editor-lite](https://github.com/HarryChen0506/react-markdown-editor-lite) 进行了封装改造，并且发布到了开源社区。

### 预览
在线体验 [https://harrychen0506.github.io/react-markdown-editor-lite/](https://harrychen0506.github.io/react-markdown-editor-lite/)

![image](https://github.com//HarryChen0506/react-markdown-editor-lite/blob/master/image/react-markdown-editor-lite-v1.0.0.PNG?raw=true)

### 特点
* 轻量、基于React
* UI可配置, 如只显示编辑区或预览区
* 支持自定义markdown语法解析器,语法高亮等
* 支持常用的markdown编辑功能，如加粗，斜体等等...
* 支持功能按钮插拔化，用户可以自定义扩展组件
* 支持编辑区和预览区同步滚动

### 开发心得

- 文本编辑

  大多数常见的编辑器，包括富文本编辑器，利用了某些元素如div的contenteditable属性，配合selection、range、execCommand等API，实现了富文本编辑功能。这里面的实现比较复杂，所以有了"[为什么都说富文本编辑器是天坑？](https://www.zhihu.com/question/38699645)"这个说法。

  而markdown编辑器，核心的处理内容为简单语法的纯文本，复杂度相对来说比较低，并且input标签自带onSelect事件，可以很方便的获取选择信息（选择起始位置和选择文本值），因此要想实现编辑功能，只需将要改动的内容进行文本转换，然后进行重新拼接首尾，大功告成。
  
- markdown解析

  考察了几个社区流行的markdown解析器，比较流行的有[markdown](https://www.npmjs.com/package/markdown), [markdown-it](https://www.npmjs.com/package/markdown-it), [marked](https://www.npmjs.com/package/marked) 等等。综合考虑扩展性以及稳定性，笔者推荐使用markdown-it作为markdown的词法解析器，因为该解析器有比较多的插件，并且支持语法高亮。

- 同步滚动

  当选择分栏编辑的时候，滚动左侧的编辑区，右侧的预览区能自动滚动到对应的区域。方案参考了《[手把手教你用 100行代码实现基于 react的 markdown 输入 + 即时预览在线编辑器（一）](https://github.com/accforgit/blog-data/blob/master/%E5%9C%A8%E7%BA%BF%E7%BC%96%E8%BE%91%E5%99%A8/README/README1.md)》。只需先计算出输入框容器元素与预览框容器元素之间最大scroll范围的比例值，然后根据主动滚动元素自身的scrollTop做相应的比例换算，即可知道对方区域的scrollTop值。

- 关于UI
 
  - 项目的字体库选择了Font Awesome风格，并且只选取了项目所需要的一些图标。
  - 编辑器的整体css均可通过全局覆盖的形式进行自定义。目前暂时只支持灰色主题。
  - 编辑器的显示区域包括菜单栏，编辑器，预览区，工具栏，通过配置组件的config属性，可以选择默认的展示区域。
  
### Install

```js
npm install react-markdown-editor-lite --save
```

### Props

| Property | Description | Type | default | Remarks |
| --- | --- | --- | --- | --- |
| value | markdown content | String | '' | required |
| style | component container style | Object | {height: '100%'} | not required |
| config | component config | Object | {view: {...}, logger: {...}} | not required |
| onChange | emitting when editor has changed | Function | ({html, md}) => {} | not required |
| onImageUpload | when image uploaded, callback emitting will get image markdown text | (file: File, callback: (url: string) => void) => void; | ({file, callback}) => {} | not required |
| renderHTML | Render markdown text to HTML. You can return either string, function or Promise | (text: string) => string|function|Promise | none | **required** |

### Example

``` js
'use strict';
import React from 'react'
import ReactDOM from 'react-dom'
import MdEditor from 'react-markdown-editor-lite'
import MarkdownIt from 'markdown-it'
import emoji from 'markdown-it-emoji'
import subscript from 'markdown-it-sub'
import superscript from 'markdown-it-sup'
import footnote from 'markdown-it-footnote'
import deflist from 'markdown-it-deflist'
import abbreviation from 'markdown-it-abbr'
import insert from 'markdown-it-ins'
import mark from 'markdown-it-mark'
import tasklists from 'markdown-it-task-lists'
import hljs from 'highlight.js'
import 'highlight.js/styles/atom-one-light.css'
// import 'highlight.js/styles/github.css'
import './index.less';

const MOCK_DATA = "I Love React."
export default class Demo extends React.Component {
  mdEditor = null
  mdParser = null
  constructor(props) {
    super(props)
    // initial a parsera
    this.mdParser = new MarkdownIt({
      html: true,
      linkify: true,
      typographer: true,
      highlight: function (str, lang) {
        if (lang && hljs.getLanguage(lang)) {
          try {
            return hljs.highlight(lang, str).value
          } catch (__) {}
        }    
        return '' // use external default escaping
      }
    })
    .use(emoji)
    .use(subscript)
    .use(superscript)
    .use(footnote)
    .use(deflist)
    .use(abbreviation)
    .use(insert)
    .use(mark)
    .use(tasklists, { enabled: this.taskLists })
    this.renderHTML = this.renderHTML.bind(this)
  }
  handleEditorChange({html, md}) {
    console.log('handleEditorChange', html, md)
  }
  handleImageUpload(file, callback) {
    const reader = new FileReader()
    reader.onload = () => {      
      const convertBase64UrlToBlob = (urlData) => {  
        let arr = urlData.split(','), mime = arr[0].match(/:(.*?);/)[1]
        let bstr = atob(arr[1])
        let n = bstr.length
        let u8arr = new Uint8Array(n)
        while (n--) {
          u8arr[n] = bstr.charCodeAt(n)
        }
        return new Blob([u8arr], {type:mime})
      }
      const blob = convertBase64UrlToBlob(reader.result)
      setTimeout(() => {
        // setTimeout 模拟异步上传图片
        // 当异步上传获取图片地址后，执行calback回调（参数为imageUrl字符串），即可将图片地址写入markdown
        callback('https://avatars0.githubusercontent.com/u/21263805?s=40&v=4')
      }, 1000)
    }
    reader.readAsDataURL(file)
  }
  renderHTML(text) {
    // 模拟异步渲染Markdown
    return new Promise((resolve) => {
      setTimeout(() => {
        resolve(this.mdParser.render(text))
      }, 1000)
    })
  }
  handleGetMdValue = () => {   
    this.mdEditor && alert(this.mdEditor.getMdValue())      
  }
  handleGetHtmlValue = () => {    
    this.mdEditor && alert(this.mdEditor.getHtmlValue())
  }
  render() {
    return (      
      <div>
        <nav>
          <button onClick={this.handleGetMdValue} >getMdValue</button>  
          <button onClick={this.handleGetHtmlValue} >getHtmlValue</button>  
        </nav>
        <section style="height: 500px">
          <MdEditor 
            ref={node => this.mdEditor = node}
            value={MOCK_DATA}
            style={{height: '400px'}}
            renderHTML={this.renderHTML}
            config={{
              view: {
                menu: true,
                md: true,
                html: true
              },
              imageUrl: 'https://octodex.github.com/images/minion.png'
            }}
            onChange={this.handleEditorChange} 
            onImageUpload={this.handleImageUpload}
          />
        </section>                        
      </div>      
    )
  }
}
```

### 最后

   欢迎大家使用和反馈，[项目地址](https://github.com/HarryChen0506/react-markdown-editor-lite) (https://github.com/HarryChen0506/react-markdown-editor-lite)， 你的点赞将是我莫大的动力😊

![1.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636946743939_1.png)', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, total=null}
2022-01-18 23:10:31:793 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 14ms
2022-01-18 23:10:31:793 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:10:32:457 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:10:32:457 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:10:32:457 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:10:32:457 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10005
2022-01-18 23:10:32:457 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:10:32:457 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10005
2022-01-18 23:10:32:457 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[], total=0}
2022-01-18 23:10:32:457 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 24ms
2022-01-18 23:10:32:457 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:10:58:826 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:10:58:826 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:10:58:826 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:10:58:826 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/categories
2022-01-18 23:10:58:826 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:10:58:826 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:10:58:826 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:10:58:826 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles/hot
2022-01-18 23:10:58:826 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getHotArticles
2022-01-18 23:10:58:826 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:10:58:826 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CategoryContoller.getCategories
2022-01-18 23:10:58:827 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: {}
2022-01-18 23:10:58:827 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CategoryVo{categoryId=2, name='liddffd', articleCount=1}, CategoryVo{categoryId=1, name='Life ', articleCount=2}], total=null}
2022-01-18 23:10:58:827 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 2ms
2022-01-18 23:10:58:827 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:10:58:826 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10004, status=null, type=null, title='Spring boot', description='null', content='null', firstPicture='null', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10005, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='null'}}, ArticleVo{userInfo=null, category=null, BaseArticleVo{articleId=10003, status=null, type=null, title='dd', description='null', content='null', firstPicture='null', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='null'}}], total=null}
2022-01-18 23:10:58:827 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 1ms
2022-01-18 23:10:58:827 [http-nio-8081-exec-6] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:10:58:836 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:10:58:837 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:10:58:837 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:10:58:837 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/articles
2022-01-18 23:10:58:837 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticles
2022-01-18 23:10:58:837 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: SearchVo{page=1, limit=10, categoryId=null, total=null}
2022-01-18 23:10:58:837 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10005, status=1, type=1, title='dd', description='This is the doc of React markdown editor lite.
Enjoy!!', content='null', firstPicture='', viewCount=83, createDate='Sun Nov 07 14:09:29 EST 2021', updateDate='Tue Jan 18 22:54:08 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='null', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=1, name='Life ', articleCount=null}, BaseArticleVo{articleId=10003, status=1, type=1, title='dd', description='test', content='null', firstPicture='', viewCount=0, createDate='Tue Oct 12 15:57:33 EDT 2021', updateDate='Tue Jan 18 22:53:20 EST 2022'}}], total=3}
2022-01-18 23:10:58:837 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 11ms
2022-01-18 23:10:58:837 [http-nio-8081-exec-2] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:11:02:096 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:11:02:096 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:11:02:096 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:11:02:096 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/article/10004
2022-01-18 23:11:02:096 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticleDetail
2022-01-18 23:11:02:096 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:11:02:096 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='rererer![test.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636947281578_test.png)', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, total=null}
2022-01-18 23:11:02:096 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 7ms
2022-01-18 23:11:02:096 [http-nio-8081-exec-10] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:11:02:105 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:11:02:105 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:11:02:105 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:11:02:105 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10004
2022-01-18 23:11:02:105 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:11:02:105 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:11:02:105 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CommentListVo{commentId=18createdate=Sun Jan 09 10:06:04 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/81.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsdf@qq.com', nickname='sf', parentCommentNickname='null', content='sdfsf', status='0'}}, CommentListVo{commentId=17createdate=Sun Jan 09 10:05:33 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/57.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfsf', parentCommentNickname='null', content='hdsfsd', status='0'}}, CommentListVo{commentId=16createdate=Sun Jan 09 10:03:48 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/90.png, replyComments=[CommentListVo{commentId=19createdate=Mon Jan 10 09:47:47 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/73.png, replyComments=[], CommentVo=CommentVo{parentCommentId=16, articleId=10004, email='sdfsd@Ck.com', nickname='ivan', parentCommentNickname='sfs@ss.c', content='dfjgg', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfs@ss.c', parentCommentNickname='null', content='what?', status='0'}}, CommentListVo{commentId=11createdate=Wed Dec 01 22:44:50 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=12createdate=Wed Dec 01 22:45:18 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=15createdate=Wed Dec 01 23:42:17 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='555@test.com', nickname='555', parentCommentNickname='jess', content='555', status='0'}}, CommentListVo{commentId=13createdate=Wed Dec 01 22:45:56 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=14createdate=Wed Dec 01 22:46:22 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=13, articleId=10004, email='hah@gmail.com', nickname='haha', parentCommentNickname='test', content='hahah', status='0'}}], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='test@gg.com', nickname='test', parentCommentNickname='jess', content='great!', status='0'}}], CommentVo=CommentVo{parentCommentId=11, articleId=10004, email='jess@gmail.com', nickname='jess', parentCommentNickname='ivan', content='I am doing well. You?', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='ivanliang0818@gmail.com', nickname='ivan', parentCommentNickname='null', content='How are you doing today?', status='0'}}], total=4}
2022-01-18 23:11:02:105 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 16ms
2022-01-18 23:11:02:105 [http-nio-8081-exec-7] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:11:02:107 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:11:02:108 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:11:02:108 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:11:02:108 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10004
2022-01-18 23:11:02:108 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:11:02:108 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:11:02:108 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CommentListVo{commentId=18createdate=Sun Jan 09 10:06:04 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/81.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsdf@qq.com', nickname='sf', parentCommentNickname='null', content='sdfsf', status='0'}}, CommentListVo{commentId=17createdate=Sun Jan 09 10:05:33 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/57.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfsf', parentCommentNickname='null', content='hdsfsd', status='0'}}, CommentListVo{commentId=16createdate=Sun Jan 09 10:03:48 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/90.png, replyComments=[CommentListVo{commentId=19createdate=Mon Jan 10 09:47:47 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/73.png, replyComments=[], CommentVo=CommentVo{parentCommentId=16, articleId=10004, email='sdfsd@Ck.com', nickname='ivan', parentCommentNickname='sfs@ss.c', content='dfjgg', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfs@ss.c', parentCommentNickname='null', content='what?', status='0'}}, CommentListVo{commentId=11createdate=Wed Dec 01 22:44:50 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=12createdate=Wed Dec 01 22:45:18 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=15createdate=Wed Dec 01 23:42:17 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='555@test.com', nickname='555', parentCommentNickname='jess', content='555', status='0'}}, CommentListVo{commentId=13createdate=Wed Dec 01 22:45:56 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=14createdate=Wed Dec 01 22:46:22 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=13, articleId=10004, email='hah@gmail.com', nickname='haha', parentCommentNickname='test', content='hahah', status='0'}}], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='test@gg.com', nickname='test', parentCommentNickname='jess', content='great!', status='0'}}], CommentVo=CommentVo{parentCommentId=11, articleId=10004, email='jess@gmail.com', nickname='jess', parentCommentNickname='ivan', content='I am doing well. You?', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='ivanliang0818@gmail.com', nickname='ivan', parentCommentNickname='null', content='How are you doing today?', status='0'}}], total=4}
2022-01-18 23:11:02:108 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 18ms
2022-01-18 23:11:02:108 [http-nio-8081-exec-1] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:11:02:134 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:11:02:134 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:11:02:134 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:11:02:134 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10004
2022-01-18 23:11:02:134 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:11:02:134 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:11:02:134 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CommentListVo{commentId=18createdate=Sun Jan 09 10:06:04 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/81.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsdf@qq.com', nickname='sf', parentCommentNickname='null', content='sdfsf', status='0'}}, CommentListVo{commentId=17createdate=Sun Jan 09 10:05:33 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/57.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfsf', parentCommentNickname='null', content='hdsfsd', status='0'}}, CommentListVo{commentId=16createdate=Sun Jan 09 10:03:48 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/90.png, replyComments=[CommentListVo{commentId=19createdate=Mon Jan 10 09:47:47 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/73.png, replyComments=[], CommentVo=CommentVo{parentCommentId=16, articleId=10004, email='sdfsd@Ck.com', nickname='ivan', parentCommentNickname='sfs@ss.c', content='dfjgg', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfs@ss.c', parentCommentNickname='null', content='what?', status='0'}}, CommentListVo{commentId=11createdate=Wed Dec 01 22:44:50 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=12createdate=Wed Dec 01 22:45:18 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=15createdate=Wed Dec 01 23:42:17 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='555@test.com', nickname='555', parentCommentNickname='jess', content='555', status='0'}}, CommentListVo{commentId=13createdate=Wed Dec 01 22:45:56 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=14createdate=Wed Dec 01 22:46:22 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=13, articleId=10004, email='hah@gmail.com', nickname='haha', parentCommentNickname='test', content='hahah', status='0'}}], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='test@gg.com', nickname='test', parentCommentNickname='jess', content='great!', status='0'}}], CommentVo=CommentVo{parentCommentId=11, articleId=10004, email='jess@gmail.com', nickname='jess', parentCommentNickname='ivan', content='I am doing well. You?', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='ivanliang0818@gmail.com', nickname='ivan', parentCommentNickname='null', content='How are you doing today?', status='0'}}], total=4}
2022-01-18 23:11:02:134 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 12ms
2022-01-18 23:11:02:134 [http-nio-8081-exec-4] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:12:00:711 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:12:00:712 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:12:00:712 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:12:00:712 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/article/10004
2022-01-18 23:12:00:712 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.ArticleController.getPublicArticleDetail
2022-01-18 23:12:00:712 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:12:00:712 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=ArticleVo{userInfo=UserInfoVo{userId=100001, nickName='ivan', userName='ivan', avatar='https://res-blog-public.s3.ca-central-1.amazonaws.com/default_avatar.jpg'}, category=CategoryVo{categoryId=2, name='liddffd', articleCount=null}, BaseArticleVo{articleId=10004, status=1, type=2, title='Spring boot', description='rerwerwer', content='rererer![test.png](https://s3.ca-central-1.amazonaws.com/res-blog-public/res-dev/blog_1636947281578_test.png)', firstPicture='', viewCount=174, createDate='Tue Oct 12 15:58:26 EDT 2021', updateDate='Tue Jan 18 22:56:37 EST 2022'}}, total=null}
2022-01-18 23:12:00:712 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 32ms
2022-01-18 23:12:00:712 [http-nio-8081-exec-3] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:12:00:734 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:12:00:735 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:12:00:735 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:12:00:735 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10004
2022-01-18 23:12:00:735 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:12:00:735 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:12:00:735 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CommentListVo{commentId=18createdate=Sun Jan 09 10:06:04 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/81.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsdf@qq.com', nickname='sf', parentCommentNickname='null', content='sdfsf', status='0'}}, CommentListVo{commentId=17createdate=Sun Jan 09 10:05:33 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/57.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfsf', parentCommentNickname='null', content='hdsfsd', status='0'}}, CommentListVo{commentId=16createdate=Sun Jan 09 10:03:48 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/90.png, replyComments=[CommentListVo{commentId=19createdate=Mon Jan 10 09:47:47 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/73.png, replyComments=[], CommentVo=CommentVo{parentCommentId=16, articleId=10004, email='sdfsd@Ck.com', nickname='ivan', parentCommentNickname='sfs@ss.c', content='dfjgg', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfs@ss.c', parentCommentNickname='null', content='what?', status='0'}}, CommentListVo{commentId=11createdate=Wed Dec 01 22:44:50 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=12createdate=Wed Dec 01 22:45:18 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=15createdate=Wed Dec 01 23:42:17 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='555@test.com', nickname='555', parentCommentNickname='jess', content='555', status='0'}}, CommentListVo{commentId=13createdate=Wed Dec 01 22:45:56 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=14createdate=Wed Dec 01 22:46:22 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=13, articleId=10004, email='hah@gmail.com', nickname='haha', parentCommentNickname='test', content='hahah', status='0'}}], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='test@gg.com', nickname='test', parentCommentNickname='jess', content='great!', status='0'}}], CommentVo=CommentVo{parentCommentId=11, articleId=10004, email='jess@gmail.com', nickname='jess', parentCommentNickname='ivan', content='I am doing well. You?', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='ivanliang0818@gmail.com', nickname='ivan', parentCommentNickname='null', content='How are you doing today?', status='0'}}], total=4}
2022-01-18 23:12:00:735 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 55ms
2022-01-18 23:12:00:735 [http-nio-8081-exec-9] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:12:00:739 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:12:00:739 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:12:00:739 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:12:00:739 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10004
2022-01-18 23:12:00:739 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:12:00:739 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:12:00:739 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CommentListVo{commentId=18createdate=Sun Jan 09 10:06:04 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/81.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsdf@qq.com', nickname='sf', parentCommentNickname='null', content='sdfsf', status='0'}}, CommentListVo{commentId=17createdate=Sun Jan 09 10:05:33 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/57.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfsf', parentCommentNickname='null', content='hdsfsd', status='0'}}, CommentListVo{commentId=16createdate=Sun Jan 09 10:03:48 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/90.png, replyComments=[CommentListVo{commentId=19createdate=Mon Jan 10 09:47:47 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/73.png, replyComments=[], CommentVo=CommentVo{parentCommentId=16, articleId=10004, email='sdfsd@Ck.com', nickname='ivan', parentCommentNickname='sfs@ss.c', content='dfjgg', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfs@ss.c', parentCommentNickname='null', content='what?', status='0'}}, CommentListVo{commentId=11createdate=Wed Dec 01 22:44:50 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=12createdate=Wed Dec 01 22:45:18 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=15createdate=Wed Dec 01 23:42:17 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='555@test.com', nickname='555', parentCommentNickname='jess', content='555', status='0'}}, CommentListVo{commentId=13createdate=Wed Dec 01 22:45:56 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=14createdate=Wed Dec 01 22:46:22 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=13, articleId=10004, email='hah@gmail.com', nickname='haha', parentCommentNickname='test', content='hahah', status='0'}}], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='test@gg.com', nickname='test', parentCommentNickname='jess', content='great!', status='0'}}], CommentVo=CommentVo{parentCommentId=11, articleId=10004, email='jess@gmail.com', nickname='jess', parentCommentNickname='ivan', content='I am doing well. You?', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='ivanliang0818@gmail.com', nickname='ivan', parentCommentNickname='null', content='How are you doing today?', status='0'}}], total=4}
2022-01-18 23:12:00:739 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 60ms
2022-01-18 23:12:00:739 [http-nio-8081-exec-5] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
2022-01-18 23:12:01:272 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log starts =====
2022-01-18 23:12:01:272 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request succeed
2022-01-18 23:12:01:272 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request Method: GET
2022-01-18 23:12:01:273 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Request URI: /api/comment/10004
2022-01-18 23:12:01:273 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Method Name: com.ivan.sunnyblog.web.controller.CommentController.getComments
2022-01-18 23:12:01:273 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Params: 10004
2022-01-18 23:12:01:273 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Result: ResultInfo{info='null', status=0, data=[CommentListVo{commentId=18createdate=Sun Jan 09 10:06:04 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/81.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsdf@qq.com', nickname='sf', parentCommentNickname='null', content='sdfsf', status='0'}}, CommentListVo{commentId=17createdate=Sun Jan 09 10:05:33 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/57.png, replyComments=[], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfsf', parentCommentNickname='null', content='hdsfsd', status='0'}}, CommentListVo{commentId=16createdate=Sun Jan 09 10:03:48 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/90.png, replyComments=[CommentListVo{commentId=19createdate=Mon Jan 10 09:47:47 EST 2022, avatar=https://res-blog-public.s3.ca-central-1.amazonaws.com/avatar/73.png, replyComments=[], CommentVo=CommentVo{parentCommentId=16, articleId=10004, email='sdfsd@Ck.com', nickname='ivan', parentCommentNickname='sfs@ss.c', content='dfjgg', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='sdfsd@Ck.com', nickname='sfs@ss.c', parentCommentNickname='null', content='what?', status='0'}}, CommentListVo{commentId=11createdate=Wed Dec 01 22:44:50 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=12createdate=Wed Dec 01 22:45:18 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=15createdate=Wed Dec 01 23:42:17 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='555@test.com', nickname='555', parentCommentNickname='jess', content='555', status='0'}}, CommentListVo{commentId=13createdate=Wed Dec 01 22:45:56 EST 2021, avatar=null, replyComments=[CommentListVo{commentId=14createdate=Wed Dec 01 22:46:22 EST 2021, avatar=null, replyComments=[], CommentVo=CommentVo{parentCommentId=13, articleId=10004, email='hah@gmail.com', nickname='haha', parentCommentNickname='test', content='hahah', status='0'}}], CommentVo=CommentVo{parentCommentId=12, articleId=10004, email='test@gg.com', nickname='test', parentCommentNickname='jess', content='great!', status='0'}}], CommentVo=CommentVo{parentCommentId=11, articleId=10004, email='jess@gmail.com', nickname='jess', parentCommentNickname='ivan', content='I am doing well. You?', status='0'}}], CommentVo=CommentVo{parentCommentId=0, articleId=10004, email='ivanliang0818@gmail.com', nickname='ivan', parentCommentNickname='null', content='How are you doing today?', status='0'}}], total=4}
2022-01-18 23:12:01:273 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect Process Time: 9ms
2022-01-18 23:12:01:273 [http-nio-8081-exec-8] INFO  com.ivan.sunnyblog.web.aop.ControllerAspect ===== log ends =====
