/*
 * This file is generated by jOOQ.
 */
package com.ivan.sunnyblog.base.models.tables.daos;


import com.ivan.sunnyblog.base.models.tables.BlogUser;
import com.ivan.sunnyblog.base.models.tables.records.BlogUserRecord;

import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BlogUserDao extends DAOImpl<BlogUserRecord, com.ivan.sunnyblog.base.models.tables.pojos.BlogUser, Long> {

    /**
     * Create a new BlogUserDao without any configuration
     */
    public BlogUserDao() {
        super(BlogUser.BLOG_USER, com.ivan.sunnyblog.base.models.tables.pojos.BlogUser.class);
    }

    /**
     * Create a new BlogUserDao with an attached configuration
     */
    public BlogUserDao(Configuration configuration) {
        super(BlogUser.BLOG_USER, com.ivan.sunnyblog.base.models.tables.pojos.BlogUser.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(com.ivan.sunnyblog.base.models.tables.pojos.BlogUser object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByUserId(Long... values) {
        return fetch(BlogUser.BLOG_USER.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public com.ivan.sunnyblog.base.models.tables.pojos.BlogUser fetchOneByUserId(Long value) {
        return fetchOne(BlogUser.BLOG_USER.USER_ID, value);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByUsername(String... values) {
        return fetch(BlogUser.BLOG_USER.USERNAME, values);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByPassword(String... values) {
        return fetch(BlogUser.BLOG_USER.PASSWORD, values);
    }

    /**
     * Fetch records that have <code>nickname IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByNickname(String... values) {
        return fetch(BlogUser.BLOG_USER.NICKNAME, values);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByEmail(String... values) {
        return fetch(BlogUser.BLOG_USER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByStatus(Short... values) {
        return fetch(BlogUser.BLOG_USER.STATUS, values);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByRole(Short... values) {
        return fetch(BlogUser.BLOG_USER.ROLE, values);
    }

    /**
     * Fetch records that have <code>create_date IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByCreateDate(Date... values) {
        return fetch(BlogUser.BLOG_USER.CREATE_DATE, values);
    }

    /**
     * Fetch records that have <code>update_date IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByUpdateDate(Date... values) {
        return fetch(BlogUser.BLOG_USER.UPDATE_DATE, values);
    }

    /**
     * Fetch records that have <code>avatar IN (values)</code>
     */
    public List<com.ivan.sunnyblog.base.models.tables.pojos.BlogUser> fetchByAvatar(String... values) {
        return fetch(BlogUser.BLOG_USER.AVATAR, values);
    }
}
