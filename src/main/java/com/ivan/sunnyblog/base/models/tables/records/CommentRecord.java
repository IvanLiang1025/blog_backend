/*
 * This file is generated by jOOQ.
 */
package com.ivan.sunnyblog.base.models.tables.records;


import com.ivan.sunnyblog.base.models.tables.Comment;

import java.util.Date;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record11<Long, Long, String, String, String, String, Short, Long, String, Date, Short> {

    private static final long serialVersionUID = 824666864;

    /**
     * Setter for <code>public.comment.comment_id</code>.
     */
    public void setCommentId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.comment.comment_id</code>.
     */
    public Long getCommentId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.comment.article_id</code>.
     */
    public void setArticleId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.comment.article_id</code>.
     */
    public Long getArticleId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.comment.nickname</code>.
     */
    public void setNickname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.comment.nickname</code>.
     */
    public String getNickname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.comment.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.comment.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.comment.content</code>.
     */
    public void setContent(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.comment.content</code>.
     */
    public String getContent() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.comment.avatar</code>.
     */
    public void setAvatar(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.comment.avatar</code>.
     */
    public String getAvatar() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.comment.status</code>.
     */
    public void setStatus(Short value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.comment.status</code>.
     */
    public Short getStatus() {
        return (Short) get(6);
    }

    /**
     * Setter for <code>public.comment.parent_comment_id</code>.
     */
    public void setParentCommentId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.comment.parent_comment_id</code>.
     */
    public Long getParentCommentId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>public.comment.parent_comment_nickname</code>.
     */
    public void setParentCommentNickname(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.comment.parent_comment_nickname</code>.
     */
    public String getParentCommentNickname() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.comment.createdate</code>.
     */
    public void setCreatedate(Date value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.comment.createdate</code>.
     */
    public Date getCreatedate() {
        return (Date) get(9);
    }

    /**
     * Setter for <code>public.comment.poster_role</code>.
     */
    public void setPosterRole(Short value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.comment.poster_role</code>.
     */
    public Short getPosterRole() {
        return (Short) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, String, String, String, String, Short, Long, String, Date, Short> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<Long, Long, String, String, String, String, Short, Long, String, Date, Short> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Comment.COMMENT.COMMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Comment.COMMENT.ARTICLE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Comment.COMMENT.NICKNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Comment.COMMENT.EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Comment.COMMENT.CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Comment.COMMENT.AVATAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field7() {
        return Comment.COMMENT.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field8() {
        return Comment.COMMENT.PARENT_COMMENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Comment.COMMENT.PARENT_COMMENT_NICKNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Date> field10() {
        return Comment.COMMENT.CREATEDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field11() {
        return Comment.COMMENT.POSTER_ROLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getCommentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getArticleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getNickname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component8() {
        return getParentCommentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getParentCommentNickname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date component10() {
        return getCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component11() {
        return getPosterRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getCommentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getArticleId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getNickname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getEmail();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getContent();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getAvatar();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value7() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value8() {
        return getParentCommentId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getParentCommentNickname();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Date value10() {
        return getCreatedate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value11() {
        return getPosterRole();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value1(Long value) {
        setCommentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value2(Long value) {
        setArticleId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value3(String value) {
        setNickname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value4(String value) {
        setEmail(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value5(String value) {
        setContent(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value6(String value) {
        setAvatar(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value7(Short value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value8(Long value) {
        setParentCommentId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value9(String value) {
        setParentCommentNickname(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value10(Date value) {
        setCreatedate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord value11(Short value) {
        setPosterRole(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CommentRecord values(Long value1, Long value2, String value3, String value4, String value5, String value6, Short value7, Long value8, String value9, Date value10, Short value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Long commentId, Long articleId, String nickname, String email, String content, String avatar, Short status, Long parentCommentId, String parentCommentNickname, Date createdate, Short posterRole) {
        super(Comment.COMMENT);

        set(0, commentId);
        set(1, articleId);
        set(2, nickname);
        set(3, email);
        set(4, content);
        set(5, avatar);
        set(6, status);
        set(7, parentCommentId);
        set(8, parentCommentNickname);
        set(9, createdate);
        set(10, posterRole);
    }
}
